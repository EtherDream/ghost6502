{"version":3,"file":"opcode.js","sourceRoot":"","sources":["../src/opcode.ts"],"names":[],"mappings":"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","sourcesContent":["// const enum OP {\nenum OP {\n  BRK         = 0x00,\n  NOP         = 0xEA,\n\n  //\n  // stack\n  //\n  PHA         = 0x48,\n  PLA         = 0x68,\n\n  PHP         = 0x08,\n  PLP         = 0x28,\n\n  //\n  // load\n  //\n  LDA_IMM     = 0xA9,\n  LDA_ZPG     = 0xA5,\n  LDA_ZPG_X   = 0xB5,\n  LDA_ABS     = 0xAD,\n  LDA_ABS_X   = 0xBD,\n  LDA_ABS_Y   = 0xB9,\n  LDA_IND_X   = 0xA1,\n  LDA_IND_Y   = 0xB1,\n\n  LDX_IMM     = 0xA2,\n  LDX_ZPG     = 0xA6,\n  LDX_ZPG_Y   = 0xB6,\n  LDX_ABS     = 0xAE,\n  LDX_ABS_Y   = 0xBE,\n\n  LDY_IMM     = 0xA0,\n  LDY_ZPG     = 0xA4,\n  LDY_ZPG_X   = 0xB4,\n  LDY_ABS     = 0xAC,\n  LDY_ABS_X   = 0xBC,\n\n  //\n  // store\n  //\n  STA_ZPG     = 0x85,\n  STA_ZPG_X   = 0x95,\n  STA_ABS     = 0x8D,\n  STA_ABS_X   = 0x9D,\n  STA_ABS_Y   = 0x99,\n  STA_IND_X   = 0x81,\n  STA_IND_Y   = 0x91,\n\n  STX_ZPG     = 0x86,\n  STX_ZPG_Y   = 0x96,\n  STX_ABS     = 0x8E,\n\n  STY_ZPG     = 0x84,\n  STY_ZPG_X   = 0x94,\n  STY_ABS     = 0x8C,\n\n  //\n  // transfer\n  //\n  TAX         = 0xAA,\n  TXA         = 0x8A,\n\n  TAY         = 0xA8,\n  TYA         = 0x98,\n\n  TSX         = 0xBA,\n  TXS         = 0x9A,\n\n  //\n  // ORA\n  //\n  ORA_IMM     = 0x09,\n  ORA_ZPG     = 0x05,\n  ORA_ZPG_X   = 0x15,\n  ORA_ABS     = 0x0D,\n  ORA_ABS_X   = 0x1D,\n  ORA_ABS_Y   = 0x19,\n  ORA_IND_X   = 0x01,\n  ORA_IND_Y   = 0x11,\n\n  //\n  // AND\n  //\n  AND_IMM     = 0x29,\n  AND_ZPG     = 0x25,\n  AND_ZPG_X   = 0x35,\n  AND_ABS     = 0x2D,\n  AND_ABS_X   = 0x3D,\n  AND_ABS_Y   = 0x39,\n  AND_IND_X   = 0x21,\n  AND_IND_Y   = 0x31,\n\n  //\n  // EOR\n  //\n  EOR_IMM     = 0x49,\n  EOR_ZPG     = 0x45,\n  EOR_ZPG_X   = 0x55,\n  EOR_ABS     = 0x4D,\n  EOR_ABS_X   = 0x5D,\n  EOR_ABS_Y   = 0x59,\n  EOR_IND_X   = 0x41,\n  EOR_IND_Y   = 0x51,\n\n  //\n  // BIT\n  //\n  BIT_ZPG     = 0x24,\n  BIT_ABS     = 0x2C,\n\n  //\n  // ASL\n  //\n  ASL_A       = 0x0A,\n  ASL_ZPG     = 0x06,\n  ASL_ZPG_X   = 0x16,\n  ASL_ABS     = 0x0E,\n  ASL_ABS_X   = 0x1E,\n\n  //\n  // LSR\n  //\n  LSR_A       = 0x4A,\n  LSR_ZPG     = 0x46,\n  LSR_ZPG_X   = 0x56,\n  LSR_ABS     = 0x4E,\n  LSR_ABS_X   = 0x5E,\n\n  //\n  // ROL\n  //\n  ROL_A       = 0x2A,\n  ROL_ZPG     = 0x26,\n  ROL_ZPG_X   = 0x36,\n  ROL_ABS     = 0x2E,\n  ROL_ABS_X   = 0x3E,\n\n  //\n  // ROR\n  //\n  ROR_A       = 0x6A,\n  ROR_ZPG     = 0x66,\n  ROR_ZPG_X   = 0x76,\n  ROR_ABS     = 0x6E,\n  ROR_ABS_X   = 0x7E,\n\n  //\n  // INC\n  //\n  INC_ZPG     = 0xE6,\n  INC_ZPG_X   = 0xF6,\n  INC_ABS     = 0xEE,\n  INC_ABS_X   = 0xFE,\n\n  INX         = 0xE8,\n  INY         = 0xC8,\n\n  //\n  // DEC\n  //\n  DEC_ZPG     = 0xC6,\n  DEC_ZPG_X   = 0xD6,\n  DEC_ABS     = 0xCE,\n  DEC_ABS_X   = 0xDE,\n\n  DEX         = 0xCA,\n  DEY         = 0x88,\n\n  //\n  // CMP\n  //\n  CMP_IMM     = 0xC9,\n  CMP_ZPG     = 0xC5,\n  CMP_ZPG_X   = 0xD5,\n  CMP_ABS     = 0xCD,\n  CMP_ABS_X   = 0xDD,\n  CMP_ABS_Y   = 0xD9,\n  CMP_IND_X   = 0xC1,\n  CMP_IND_Y   = 0xD1,\n\n  CPX_IMM     = 0xE0,\n  CPX_ZPG     = 0xE4,\n  CPX_ABS     = 0xEC,\n\n  CPY_IMM     = 0xC0,\n  CPY_ZPG     = 0xC4,\n  CPY_ABS     = 0xCC,\n\n  //\n  // ADC\n  //\n  ADC_IMM     = 0x69,\n  ADC_ZPG     = 0x65,\n  ADC_ZPG_X   = 0x75,\n  ADC_ABS     = 0x6D,\n  ADC_ABS_X   = 0x7D,\n  ADC_ABS_Y   = 0x79,\n  ADC_IND_X   = 0x61,\n  ADC_IND_Y   = 0x71,\n\n  //\n  // SBC\n  //\n  SBC_IMM     = 0xE9,\n  SBC_ZPG     = 0xE5,\n  SBC_ZPG_X   = 0xF5,\n  SBC_ABS     = 0xED,\n  SBC_ABS_X   = 0xFD,\n  SBC_ABS_Y   = 0xF9,\n  SBC_IND_X   = 0xE1,\n  SBC_IND_Y   = 0xF1,\n\n  //\n  // status\n  //\n  CLC         = 0x18,\n  CLD         = 0xD8,\n  CLI         = 0x58,\n  CLV         = 0xB8,\n\n  SEC         = 0x38,\n  SED         = 0xF8,\n  SEI         = 0x78,\n\n  //\n  // jump\n  //\n  JMP_ABS     = 0x4C,\n  JMP_IND     = 0x6C,\n\n  JSR         = 0x20,\n  RTI         = 0x40,\n  RTS         = 0x60,\n\n  //\n  // branch\n  //\n  BPL         = 0x10,\n  BMI         = 0x30,\n  BVC         = 0x50,\n  BVS         = 0x70,\n  BCC         = 0x90,\n  BNE         = 0xD0,\n  BCS         = 0xB0,\n  BEQ         = 0xF0,\n}\n\nexport default OP"]}